{"version":3,"sources":["data.js","Loading.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Loader","color","connect","state","reducer","alertCheck","reducer2","props","Table","responsive","map","num","index","name","quan","class","onClick","dispatch","type","payload","className","Detail","lazy","재고context","React","createContext","Shoes","useContext","to","src","width","shoesData","App","useState","Data","shoes","shoesChange","numChange","load","loadChange","재고","재고변경","console","log","useEffect","Navbar","bg","expand","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","exact","path","Jumbotron","Button","variant","Provider","value","number","Loading","axios","get","then","result","data","catch","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","기본state","cartNum","store","createStore","combineReducers","액션","copy","findIndex","push","pop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bac3213e.chunk.js","sourcesContent":["export default\r\n[\r\n    {\r\n        id : 0,\r\n        title : \"White and Black\",\r\n        content : \"Born in France\",\r\n        price : 120000\r\n    },\r\n\r\n    {\r\n        id : 1,\r\n        title : \"Red Knit\",\r\n        content : \"Born in Seoul\",\r\n        price : 110000\r\n    },\r\n\r\n    {\r\n        id : 2,\r\n        title : \"Grey Yordan\",\r\n        content : \"Born in the States\",\r\n        price : 130000\r\n    }\r\n] ","import React from 'react'\r\nimport { WaveLoading } from 'react-loadingg';\r\n\r\nconst Loader = () => <WaveLoading\r\n    color = 'skyblue'\r\n\r\n/>;\r\n\r\nexport default Loader","import React from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props){\r\n    return (\r\n        <div>\r\n            <Table responsive>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>상품명</th>\r\n                    <th>수량</th>\r\n                    <th>변경</th>\r\n                    <th>삭제</th>\r\n                </tr>\r\n                { props.state.map((num, index) => {\r\n                    return (\r\n                    <tr key = { index }>\r\n                        <td>{ num.id }</td>\r\n                        <td>{ num.name }</td>\r\n                        <td>{ num.quan }</td>\r\n                        <td>\r\n                            <button class=\"btn btn-default\" onClick = { () => { props.dispatch({type : '수량증가', payload : num.id }) } }> + </button>\r\n                            <button class=\"btn btn-default\" onClick = { () => { props.dispatch({type : '수량감소', payload : num.id }) } }> - </button>\r\n                        </td>\r\n                        <td>\r\n                            <button class=\"btn btn-default\" onClick={ () => { props.dispatch( { type : '삭제', payload : num.id }) } }> X </button>\r\n                        </td>\r\n                    </tr>\r\n                    )\r\n                })  }\r\n            </Table>\r\n            {\r\n                props.alertCheck === true\r\n                    ? (\r\n                        <div className=\"my-alert3\">\r\n                        <p className = \"saleP\">지금 구매하시면 20% 할인</p>\r\n                        <button className = \"btn btn-info\" onClick={ () => {\r\n                            props.dispatch({ type : '닫기'} )\r\n                        }}>닫기</button>\r\n                        </div>\r\n                      )\r\n\r\n                    : null\r\n\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nfunction state를props화(state){\r\n    return {\r\n        state : state.reducer,\r\n        alertCheck : state.reducer2\r\n    }\r\n}\r\n\r\nexport default connect(state를props화)(Cart);\r\n","/* eslint-disable */\nimport React, {useEffect, useState, useContext, lazy, Suspense} from 'react';\nlet Detail = lazy( () => { return import ('./Detail.js') } );\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron } from 'react-bootstrap';\nimport axios from 'axios';\n\nimport Data from './data.js';\n/*import Detail from './Detail.js';*/\nimport Loading from './Loading.js';\nimport Cart from './Cart.js';\nimport './App.css';\nimport './Detail.scss';\n\n\nimport { Link, Route, Switch } from 'react-router-dom';\n\nlet 재고context = React.createContext();\n\nfunction App() {\n\n  let [shoes, shoesChange] = useState(Data);\n  let [num, numChange] = useState(2);\n  let [btn, btnChange] = useState(true);\n  let [load, loadChange] = useState(false);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n\n  console.log(shoes);\n\n  useEffect( () => {\n      return function () {\n          loadChange(false)\n      }\n  })\n\n  return (\n    <div className=\"App\">\n        <Navbar bg=\"light\" expand=\"lg\" className = \"\">\n            <Navbar.Brand as = { Link } to = \"/\" >Shoe Shop</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    <Nav.Link as = { Link } to = \"/\"> Home </Nav.Link>\n                    <Nav.Link as = { Link } to = \"/detail\"> Detail </Nav.Link>\n                    <Nav.Link as = { Link } to = \"/cart\"> Cart </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n\n        <Switch>\n            <Route exact path=\"/\">\n                <Jumbotron className = \"background\">\n                    <h1>20% Season OFF</h1>\n                    <p>\n                        React Test - Shoes Shop page\n                    </p>\n                    <p>\n                        <Button variant=\"primary\">Learn more</Button>\n                    </p>\n                </Jumbotron>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <재고context.Provider value={ 재고 }>\n                        {\n                            shoes.map(function (number, index) {\n                                return (\n                                    <Shoes shoesData = { shoes[index] } index = { index } key = { index } />\n                                )\n                            })\n                        }\n                        </재고context.Provider>\n                    </div>\n\n                    {\n                        load === true\n                        ? <Loading/>\n                        : null\n                    }\n                    {\n                        num < 4\n                        ?   <button className=\"btn btn-primary\" onClick={() => {\n                                loadChange(true)\n                                axios.get('https://codingapple1.github.io/shop/data2.json')\n                                    .then((result) => {\n                                        shoesChange([...shoes, ...result.data])\n                                        loadChange(false)\n                                        numChange(num + 1)\n                                    })\n                                    .catch(() => {\n                                        console.log(\"catch\")\n                                    })\n                                }}> 더보기\n                            </button>\n                        :   null\n                    }\n                </div>\n            </Route>\n\n            <Route path=\"/detail/:id\">\n                <Suspense fallback={ <div> 로딩중... </div> }>\n                    <Detail shoes = { shoes } 재고 = { 재고 } 재고변경 = { 재고변경 }/>\n                </Suspense>\n            </Route>\n\n            <Route path = \"/cart\">\n                <Cart></Cart>\n            </Route>\n\n            <Route path = \"/:id\">\n                <div>새로 만든 route</div>\n            </Route>\n\n        </Switch>\n\n    </div>\n  );\n}\n\nfunction Shoes(props) {\n    let 재고 = useContext(재고context);\n\n    return (\n        <div className=\"col-md-4\">\n            <Link to = { \"/detail/\" + props.index }>\n                <img src = {\"https://codingapple1.github.io/shop/shoes\" + (props.index + 1) + \".jpg\"} width = \"100%\" />\n            </Link>\n            <h4>{ props.shoesData.title }</h4>\n            <p>{ props.shoesData.content } & { props.shoesData.price }</p>\n        </div>\n    )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport {combineReducers, createStore} from \"redux\";\n\nlet 기본state = [\n    {id : 0, name : '멋진신발', quan : 0}\n];\nlet alert초기값 = true;\nlet cartNum = 1;\n/*localStorage.setItem('array', JSON.stringify([cartNum]));\nconsole.log(localStorage.getItem('array'));*/\n\nfunction reducer(state = 기본state, 액션) {\n    let copy = [...state];\n\n    if (액션.type === '항목추가') {\n        let findIndex = state.findIndex( (index) => { return index.name === 액션.payload.name });\n\n        if  ( findIndex >= 0 ) {\n            copy[findIndex].quan++;\n        }\n        else {\n            액션.payload.id = cartNum\n            copy.push(액션.payload);\n            cartNum++;\n        }\n        return copy\n    }\n    else if (액션.type === '수량증가') {\n        copy[액션.payload].quan++;\n        return copy\n    }\n    else if (액션.type === '수량감소') {\n        copy[액션.payload].quan--;\n        return copy\n    }\n    else if ( 액션.type === '삭제') {\n        copy.pop(액션.payload);\n        return copy\n    }\n    else {\n        return state\n    }\n}\n\nfunction reducer2(state = alert초기값, 액션) {\n    if (액션.type === '닫기') {\n        return false;\n    } else {\n        return state\n    }\n}\n\nlet store = createStore(combineReducers({reducer, reducer2}))\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <Provider store={store}>\n            <App />\n          </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}